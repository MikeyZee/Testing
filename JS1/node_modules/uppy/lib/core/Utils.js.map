{"version":3,"sources":["../../src/core/Utils.js"],"names":["throttle","require","mimeTypes","isTouchDevice","window","navigator","maxTouchPoints","truncateString","str","length","substr","secondsToTime","rawSeconds","hours","Math","floor","minutes","seconds","toArray","list","Array","prototype","slice","call","getTimeStamp","date","Date","pad","getHours","toString","getMinutes","getSeconds","generateFileID","file","name","toLowerCase","replace","type","data","size","lastModified","filter","val","join","runPromiseSequence","functions","args","promise","resolve","forEach","func","then","isPreviewSupported","fileType","fileTypeSpecific","split","test","getArrayBuffer","chunk","reject","reader","FileReader","addEventListener","e","target","result","err","console","error","readAsArrayBuffer","getFileType","fileExtension","getFileNameAndExtension","extension","isRemote","mimeToExtensions","getFileTypeExtension","mimeType","fullFileName","re","fileExt","exec","fileName","isObjectURL","url","indexOf","canvasToBlob","canvas","quality","toBlob","dataURItoBlob","toDataURL","dataURI","opts","toFile","binary","atob","array","i","push","charCodeAt","File","Uint8Array","Blob","dataURItoFile","copyToClipboard","textToCopy","fallbackString","textArea","document","createElement","setAttribute","position","top","left","width","height","padding","border","outline","boxShadow","background","value","body","appendChild","select","magicCopyFailed","removeChild","prompt","successful","execCommand","getSpeed","fileProgress","bytesUploaded","timeElapsed","uploadStarted","uploadSpeed","getBytesRemaining","bytesTotal","getETA","bytesRemaining","secondsRemaining","round","prettyETA","time","hoursStr","minutesVal","minutesStr","secondsVal","secondsStr","isDOMElement","obj","nodeType","Node","ELEMENT_NODE","findDOMElement","element","querySelector","findAllDOMElements","elements","querySelectorAll","getSocketHost","regex","host","socketProtocol","location","protocol","_emitSocketProgress","uploader","progressData","progress","uppy","log","emit","emitSocketProgress","leading","trailing","settle","promises","resolutions","rejections","resolved","rejected","wait","all","map","failed","limitPromises","limit","pending","queue","fn","onfinish","next","shift","module","exports"],"mappings":"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","file":"Utils.js","sourcesContent":["const throttle = require('lodash.throttle')\nconst mimeTypes = require('./mime-types.js')\n\n/**\n * A collection of small utility functions that help with dom manipulation, adding listeners,\n * promises and other good things.\n *\n * @module Utils\n */\n\nfunction isTouchDevice () {\n  return 'ontouchstart' in window || // works on most browsers\n          navigator.maxTouchPoints   // works on IE10/11 and Surface\n}\n\nfunction truncateString (str, length) {\n  if (str.length > length) {\n    return str.substr(0, length / 2) + '...' + str.substr(str.length - length / 4, str.length)\n  }\n  return str\n\n  // more precise version if needed\n  // http://stackoverflow.com/a/831583\n}\n\nfunction secondsToTime (rawSeconds) {\n  const hours = Math.floor(rawSeconds / 3600) % 24\n  const minutes = Math.floor(rawSeconds / 60) % 60\n  const seconds = Math.floor(rawSeconds % 60)\n\n  return { hours, minutes, seconds }\n}\n\n/**\n * Converts list into array\n*/\nfunction toArray (list) {\n  return Array.prototype.slice.call(list || [], 0)\n}\n\n/**\n * Returns a timestamp in the format of `hours:minutes:seconds`\n*/\nfunction getTimeStamp () {\n  var date = new Date()\n  var hours = pad(date.getHours().toString())\n  var minutes = pad(date.getMinutes().toString())\n  var seconds = pad(date.getSeconds().toString())\n  return hours + ':' + minutes + ':' + seconds\n}\n\n/**\n * Adds zero to strings shorter than two characters\n*/\nfunction pad (str) {\n  return str.length !== 2 ? 0 + str : str\n}\n\n/**\n * Takes a file object and turns it into fileID, by converting file.name to lowercase,\n * removing extra characters and adding type, size and lastModified\n *\n * @param {Object} file\n * @return {String} the fileID\n *\n */\nfunction generateFileID (file) {\n  // filter is needed to not join empty values with `-`\n  return [\n    'uppy',\n    file.name ? file.name.toLowerCase().replace(/[^A-Z0-9]/ig, '') : '',\n    file.type,\n    file.data.size,\n    file.data.lastModified\n  ].filter(val => val).join('-')\n}\n\n/**\n * Runs an array of promise-returning functions in sequence.\n */\nfunction runPromiseSequence (functions, ...args) {\n  let promise = Promise.resolve()\n  functions.forEach((func) => {\n    promise = promise.then(() => func(...args))\n  })\n  return promise\n}\n\nfunction isPreviewSupported (fileType) {\n  if (!fileType) return false\n  const fileTypeSpecific = fileType.split('/')[1]\n  // list of images that browsers can preview\n  if (/^(jpeg|gif|png|svg|svg\\+xml|bmp)$/.test(fileTypeSpecific)) {\n    return true\n  }\n  return false\n}\n\nfunction getArrayBuffer (chunk) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader()\n    reader.addEventListener('load', function (e) {\n      // e.target.result is an ArrayBuffer\n      resolve(e.target.result)\n    })\n    reader.addEventListener('error', function (err) {\n      console.error('FileReader error' + err)\n      reject(err)\n    })\n    // file-type only needs the first 4100 bytes\n    reader.readAsArrayBuffer(chunk)\n  })\n}\n\nfunction getFileType (file) {\n  const fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null\n\n  if (file.isRemote) {\n    // some remote providers do not support file types\n    return file.type ? file.type : mimeTypes[fileExtension]\n  }\n\n  // check if mime type is set in the file object\n  if (file.type) {\n    return file.type\n  }\n\n  // see if we can map extension to a mime type\n  if (fileExtension && mimeTypes[fileExtension]) {\n    return mimeTypes[fileExtension]\n  }\n\n  // if all fails, well, return empty\n  return null\n}\n\n// TODO Check which types are actually supported in browsers. Chrome likes webm\n// from my testing, but we may need more.\n// We could use a library but they tend to contain dozens of KBs of mappings,\n// most of which will go unused, so not sure if that's worth it.\nconst mimeToExtensions = {\n  'video/ogg': 'ogv',\n  'audio/ogg': 'ogg',\n  'video/webm': 'webm',\n  'audio/webm': 'webm',\n  'video/mp4': 'mp4',\n  'audio/mp3': 'mp3'\n}\n\nfunction getFileTypeExtension (mimeType) {\n  return mimeToExtensions[mimeType] || null\n}\n\n/**\n* Takes a full filename string and returns an object {name, extension}\n*\n* @param {string} fullFileName\n* @return {object} {name, extension}\n*/\nfunction getFileNameAndExtension (fullFileName) {\n  var re = /(?:\\.([^.]+))?$/\n  var fileExt = re.exec(fullFileName)[1]\n  var fileName = fullFileName.replace('.' + fileExt, '')\n  return {\n    name: fileName,\n    extension: fileExt\n  }\n}\n\n/**\n * Check if a URL string is an object URL from `URL.createObjectURL`.\n *\n * @param {string} url\n * @return {boolean}\n */\nfunction isObjectURL (url) {\n  return url.indexOf('blob:') === 0\n}\n\n/**\n * Save a <canvas> element's content to a Blob object.\n *\n * @param {HTMLCanvasElement} canvas\n * @return {Promise}\n */\nfunction canvasToBlob (canvas, type, quality) {\n  if (canvas.toBlob) {\n    return new Promise((resolve) => {\n      canvas.toBlob(resolve, type, quality)\n    })\n  }\n  return Promise.resolve().then(() => {\n    return dataURItoBlob(canvas.toDataURL(type, quality), {})\n  })\n}\n\nfunction dataURItoBlob (dataURI, opts, toFile) {\n  // get the base64 data\n  var data = dataURI.split(',')[1]\n\n  // user may provide mime type, if not get it from data URI\n  var mimeType = opts.mimeType || dataURI.split(',')[0].split(':')[1].split(';')[0]\n\n  // default to plain/text if data URI has no mimeType\n  if (mimeType == null) {\n    mimeType = 'plain/text'\n  }\n\n  var binary = atob(data)\n  var array = []\n  for (var i = 0; i < binary.length; i++) {\n    array.push(binary.charCodeAt(i))\n  }\n\n  // Convert to a File?\n  if (toFile) {\n    return new File([new Uint8Array(array)], opts.name || '', {type: mimeType})\n  }\n\n  return new Blob([new Uint8Array(array)], {type: mimeType})\n}\n\nfunction dataURItoFile (dataURI, opts) {\n  return dataURItoBlob(dataURI, opts, true)\n}\n\n/**\n * Copies text to clipboard by creating an almost invisible textarea,\n * adding text there, then running execCommand('copy').\n * Falls back to prompt() when the easy way fails (hello, Safari!)\n * From http://stackoverflow.com/a/30810322\n *\n * @param {String} textToCopy\n * @param {String} fallbackString\n * @return {Promise}\n */\nfunction copyToClipboard (textToCopy, fallbackString) {\n  fallbackString = fallbackString || 'Copy the URL below'\n\n  return new Promise((resolve) => {\n    const textArea = document.createElement('textarea')\n    textArea.setAttribute('style', {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '2em',\n      height: '2em',\n      padding: 0,\n      border: 'none',\n      outline: 'none',\n      boxShadow: 'none',\n      background: 'transparent'\n    })\n\n    textArea.value = textToCopy\n    document.body.appendChild(textArea)\n    textArea.select()\n\n    const magicCopyFailed = () => {\n      document.body.removeChild(textArea)\n      window.prompt(fallbackString, textToCopy)\n      resolve()\n    }\n\n    try {\n      const successful = document.execCommand('copy')\n      if (!successful) {\n        return magicCopyFailed('copy command unavailable')\n      }\n      document.body.removeChild(textArea)\n      return resolve()\n    } catch (err) {\n      document.body.removeChild(textArea)\n      return magicCopyFailed(err)\n    }\n  })\n}\n\nfunction getSpeed (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const timeElapsed = (new Date()) - fileProgress.uploadStarted\n  const uploadSpeed = fileProgress.bytesUploaded / (timeElapsed / 1000)\n  return uploadSpeed\n}\n\nfunction getBytesRemaining (fileProgress) {\n  return fileProgress.bytesTotal - fileProgress.bytesUploaded\n}\n\nfunction getETA (fileProgress) {\n  if (!fileProgress.bytesUploaded) return 0\n\n  const uploadSpeed = getSpeed(fileProgress)\n  const bytesRemaining = getBytesRemaining(fileProgress)\n  const secondsRemaining = Math.round(bytesRemaining / uploadSpeed * 10) / 10\n\n  return secondsRemaining\n}\n\nfunction prettyETA (seconds) {\n  const time = secondsToTime(seconds)\n\n  // Only display hours and minutes if they are greater than 0 but always\n  // display minutes if hours is being displayed\n  // Display a leading zero if the there is a preceding unit: 1m 05s, but 5s\n  const hoursStr = time.hours ? time.hours + 'h ' : ''\n  const minutesVal = time.hours ? ('0' + time.minutes).substr(-2) : time.minutes\n  const minutesStr = minutesVal ? minutesVal + 'm ' : ''\n  const secondsVal = minutesVal ? ('0' + time.seconds).substr(-2) : time.seconds\n  const secondsStr = secondsVal + 's'\n\n  return `${hoursStr}${minutesStr}${secondsStr}`\n}\n\n/**\n * Check if an object is a DOM element. Duck-typing based on `nodeType`.\n *\n * @param {*} obj\n */\nfunction isDOMElement (obj) {\n  return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE\n}\n\n/**\n * Find a DOM element.\n *\n * @param {Node|string} element\n * @return {Node|null}\n */\nfunction findDOMElement (element) {\n  if (typeof element === 'string') {\n    return document.querySelector(element)\n  }\n\n  if (typeof element === 'object' && isDOMElement(element)) {\n    return element\n  }\n}\n\n/**\n * Find one or more DOM elements.\n *\n * @param {string} element\n * @return {Array|null}\n */\nfunction findAllDOMElements (element) {\n  if (typeof element === 'string') {\n    const elements = [].slice.call(document.querySelectorAll(element))\n    return elements.length > 0 ? elements : null\n  }\n\n  if (typeof element === 'object' && isDOMElement(element)) {\n    return [element]\n  }\n}\n\nfunction getSocketHost (url) {\n  // get the host domain\n  var regex = /^(?:https?:\\/\\/|\\/\\/)?(?:[^@\\n]+@)?(?:www\\.)?([^\\n]+)/\n  var host = regex.exec(url)[1]\n  var socketProtocol = location.protocol === 'https:' ? 'wss' : 'ws'\n\n  return `${socketProtocol}://${host}`\n}\n\nfunction _emitSocketProgress (uploader, progressData, file) {\n  const { progress, bytesUploaded, bytesTotal } = progressData\n  if (progress) {\n    uploader.uppy.log(`Upload progress: ${progress}`)\n    uploader.uppy.emit('upload-progress', file, {\n      uploader,\n      bytesUploaded: bytesUploaded,\n      bytesTotal: bytesTotal\n    })\n  }\n}\n\nconst emitSocketProgress = throttle(_emitSocketProgress, 300, {leading: true, trailing: true})\n\nfunction settle (promises) {\n  const resolutions = []\n  const rejections = []\n  function resolved (value) {\n    resolutions.push(value)\n  }\n  function rejected (error) {\n    rejections.push(error)\n  }\n\n  const wait = Promise.all(\n    promises.map((promise) => promise.then(resolved, rejected))\n  )\n\n  return wait.then(() => {\n    return {\n      successful: resolutions,\n      failed: rejections\n    }\n  })\n}\n\n/**\n * Limit the amount of simultaneously pending Promises.\n * Returns a function that, when passed a function `fn`,\n * will make sure that at most `limit` calls to `fn` are pending.\n *\n * @param {number} limit\n * @return {function()}\n */\nfunction limitPromises (limit) {\n  let pending = 0\n  const queue = []\n  return (fn) => {\n    return (...args) => {\n      const call = () => {\n        pending++\n        const promise = fn(...args)\n        promise.then(onfinish, onfinish)\n        return promise\n      }\n\n      if (pending >= limit) {\n        return new Promise((resolve, reject) => {\n          queue.push(() => {\n            call().then(resolve, reject)\n          })\n        })\n      }\n      return call()\n    }\n  }\n  function onfinish () {\n    pending--\n    const next = queue.shift()\n    if (next) next()\n  }\n}\n\nmodule.exports = {\n  generateFileID,\n  toArray,\n  getTimeStamp,\n  runPromiseSequence,\n  isTouchDevice,\n  getFileNameAndExtension,\n  truncateString,\n  getFileTypeExtension,\n  getFileType,\n  getArrayBuffer,\n  isPreviewSupported,\n  isObjectURL,\n  secondsToTime,\n  dataURItoBlob,\n  dataURItoFile,\n  canvasToBlob,\n  getSpeed,\n  getBytesRemaining,\n  getETA,\n  copyToClipboard,\n  prettyETA,\n  findDOMElement,\n  findAllDOMElements,\n  getSocketHost,\n  emitSocketProgress,\n  settle,\n  limitPromises\n}\n"]}